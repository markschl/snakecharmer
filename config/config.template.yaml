#### Software options ####

# For QIIME and Amptk, it is possible to configure the
# Conda environment, where the software is installed,
# allowing to switch between different versions.
# Note: only pipelines that are effectively used in the 'workflows'
# definition have to be listed here. Removing the others can actually
# speed up Snakemake
software:
  usearch:
    # Path to USEARCH  (download here: https://drive5.com/usearch/)
    # By default, assuming that the binary is in $PATH as 'usearch'
    # This setting is used by the uvsnake and amptk workflows
    binary: usearch
  uvsnake:
    # optional, if Snakemake was installed in Conda; otherwise it should be in $PATH
    snakemake_env: snakemake
    # https://github.com/markschl/uvsnake source and/or version
    repo:
      tag: v0.1
      # # or...
      # commit: afec00c
      # path: <local path to downloaded repo>
  qiime:
    conda_env: qiime2-2023.7
  amptk:
    conda_env: amptk


#### Input files ####

input:
  # sample tables are grouped by sequencing technology, since
  # pipelines usually only handle some technologies
  illumina:
    # Path(s) to tab-separated sample table(s) with the following columns:
    # id, R1, R2 (R2 paths only with paired-end sequencing layout).
    # A flexible tool that assists with creating these sample tables is:
    # https://github.com/markschl/ngs-sample-tab
    # Both the output format 'simple' (-f simple) and 'qiime' (-f qiime) are valid
    run1: sample_file1.tsv
    run2: sample_file2.tsv
    # a special case are cases, where only reverse (R2) reads are provided:
    # there the forward and reverse primers are exchanged, which the system needs to know
    run3:
      samples: sample_file1.tsv
      reverse: true

# Multiple files with the same name in different directories are
# either pooled together before processing (if pool_duplicates is true)
# or a suffix number (_1, _2, etc.) is added to make the sample names
# unique (if pool_duplicates is false).
# Which samples were pooled is listed in 'results/samples.yaml' after
# running the 'config' or other commands.
pool_raw: false


##### Pipeline definition ####

# Each workflow needs two options:
#  cluster: name of a clustering/denoising method
#  taxonomy: either 'default' (all databases and methods listed
#    below under the 'taxonomy_dbs' and 'taxonomy_methods' options,
#    or a custom combination of database/method names
#     (see example in 'unoise_usearch' pipeline)
workflows:
  # UNOISE3 pipeline using VSEARCH for denoising
  unoise:
    cluster: uvsnake_unoise3
    taxonomy: default # using all taxonomy_dbs and taxonomy_methods
  # UNOISE3 pipeline using USEARCH for denoising and a custom combination
  # of taxonomy databases/assignment methods
  unoise_usearch:
    cluster: uvsnake_unoise3
    taxonomy:
      dbs:  # chooses specific 'taxonomy_dbs' (below)
        ITS: [unite_species]
      methods:  # chooses specific 'taxonomy_methods' (below)
        - sintax_90
  # QIIME / DADA2
  qiime_dada2:
    cluster: qiime_dada2
    taxonomy: default
  # Amptk with UNOISE3 clustering
  amptk_unoise:
    cluster: amptk_unoise3
    taxonomy: default
  # Amptk with Dada2 clustering
  amptk_dada2:
    # Note regarding the DADA2 settings: The Amptk DADA2 pipeline
    # still does read merging with U/VSEARCH before the denoising, followed by
    # a quality filtering step, which then forms the input for DADA2,
    # which is run without the learnErrors() step (except for PacBio).
    # It is thus a "hybrid" pipeline based on both U/VSEARCH and DADA2;
    # the quality filtering therefore uses the 'max_error_rate' from the
    # usearch -> filter and the 'expected_length' from the usearch -> merge
    # sections.
    cluster: amptk_dada2
    taxonomy: default

#### Files to compare with ASVs/OTUs using usearch_global (VSEARCH) ####

compare:
  my_comparison:
    file: path/to/seqs.fasta  # searched against clusters.fasta
    ident_threshold: 0.8  # min. identity (0 - 1)
  # The following settings apply to all comparisons unless
  # defined in the comparison settings.
  defaults:
    # the above ident_threshold overrides this setting, but if
    # not specified there, the identity threshould would be 0.9
    ident_threshold: 0.9
    # These settings are the defaults in 'default_settings'.
    # Ultimately, the whole 'default_settings' section is not required
    # if you are happy with these defaults.
    maxhits: 1  # only one hit per query (there could be up to 'maxaccepts' hits)
    maxaccepts: 64
    maxrejects: 64

#### Primers ####

primers:
  # Primers are grouped per marker. The marker name (in this case ITS) needs to be
  # present in the 'taxonomy_dbs' configuration. Only databases from the given
  # marker will be used for taxonomy assignments.
  # Furthermore, some marker-specific rules such as 'ITSx' will only be run with ITS sequences
  ITS:
    # Several primers can be specified. The desired combinations can be
    # specified as well (see 'combinations' below. Multiple primer combinations
    # may occur if:
    # - Different samples were amplified with different primers
    # - Some or all samples are a mix of different amplicons, which were pooled before indexing
    # The oligos may include adapter and/or linker sequences, but their position is not
    # required to be at the exact sequence start or end.
    # Each primer can further be a comma delimited list of oligos, which
    # were mixed together. However, they should still start at the same
    # nucleotide position to allow global trimming.
    # Also note that many pipelines (QIIME, Amptk) cannot deal with primer mixes.
    # In this case, the consensus sequence of all primers is currently used.
    # The consensus threshold is 50%, meaning that at each position,
    # 50% of the bases are represented in the consensus.
    # This may lead to some rare ambiguous variants being removed. However,
    # a higher threshold could lead to too many unspecific hits.
    # With a sufficiently high `max_error_rate`, this will not be a problem.
    # More options may be added in the future.
    # *Anchoring*: A sequence (list) can start with '^' to indicate that the
    # primer cannot occur internally, each read should start with the primer.
    # This may not be done by every pipeline.
    forward:
      - ITS3-KYO2: GGGATGAAGAACGYAGYRAA
      # - fITS7: GTGARTCATCGAATCTTTG
    reverse:
      - ITS4:
          AATCCTCCGCTTATTGATATGC,
          AATCCTCCGCTGAWTAATATGC
    # (optional) Primer combinations: either missing, 'all' (has the same effect)
    # or a list of combinations (see below)
    combinations: all
      ## Custom list of combinations:
      ## Every combination will obtain its own results directory
      ## The primer combination format must be: "forward...reverse"
      # - ITS3-KYO2...ITS4
      # - fITS7...ITS4
  # Primer trimming settings
  # (not all of them may be used by every pipeline)
  trim_settings:
    min_overlap: 15
    max_error_rate: 0.25
    # minimum length after trimming
    min_length: 100


#### Taxonomy assignment ####

taxonomy:
  # Definition of all taxonomic databases used in this pipeline.
  # Available 'db' sources are configured 'taxonomy.yaml'.
  # Here, it is possible to use the same database source several times with
  # different filtering settings.
  dbs:
    ITS:
      # UNITE including global and 97% singletons (doi.org/10.15156/BIO/1264861)
      unite:
        db: unite_eukarya_all  # defined in taxonomy.yaml
      unite_species:
        db: unite_eukarya_all  # defined in taxonomy.yaml
        # only keep references with known species annotation
        defined_rank: species
    COI:
      midori:
        db: Midori_COI
    Mito_16S:
      midori:
        db: Midori_16S

  # Assignment methods
  methods:
    # SINTAX (USEARCH)
    sintax_90:
      classifier: uvsnake_sintax
      confidence: 0.9
      # The program to use (optional; default: vsearch)
      program: vsearch  # {vsearch, usearch}
    # SINTAX (USEARCH)
    sintax_90_usearch:
      classifier: uvsnake_sintax
      confidence: 0.9
      program: usearch  # {vsearch, usearch}
    sklearn_90:
      # classify-sklearn plugin in QIIME2 with Naive Bayes classifier
      # note: the creation of the database and the taxonomy assignment use
      #   a lot of memory with the UNITE database.
      classifier: qiime_sklearn
      confidence: 0.9

  # (optional default)
  combinations: all
  # alternatively, specify a list, grouped by marker:
  # ITS:
    # - [unite, sintax_90]
    # - [unite_species, sklearn_90]


#### General and pipeline-specific settings ####

# All of these settings can be overridden by individual pipelines
# using the 'settings' key (see 'pipelines' above)

# Usearch pipeline specific settings
usearch:
  # paired end merging
  merge:
    overlap_ident: 75  # percent
    # max. nucleotide differences
    # by default, we don't care about this, only rely on overlap identity
    max_diffs: 1000
    # How long is the merged amplicon expected on average?
    # Only used to calculate expected errors for pipelines not accepting
    # error rates for quality filtering (only absolute number of expected errors)
    expected_length: 400
    # The program to use (optional; default: vsearch)
    # Note that VSEARCH is more conservative regarding more reads of potentially
    # bad quality will remain unmerged with the message
    # "alignment score too low, or score drop too high" regardless of the options
    # specified (overlap_ident, max_diffs)
    # https://groups.google.com/g/vsearch-forum/c/ojqZYbEyUw4/m/9RMhPQbXAwAJ
    program: vsearch  # { vsearch, usearch }

  # read filtering before denoising
  # (done by VSEARCH)
  filter:
    # minimum trimmed product length
    min_length: 100
    # Maximum per-base error rate
    # (e.g. 0.002 per bp means 0.8 errors per 400 bp)
    max_error_rate: 0.002

  # UNOISE3 options
  unoise3:
    min_size: 8
    # The program to use (optional; default: vsearch)
    program: vsearch  # { vsearch, usearch }

  # Mapping options for creation of OTU table
  # These settings are very conservative, the default for U/VSEARCH
  # would be maxaccepts and maxrejects = 1
  # (see also https://www.drive5.com/usearch/manual/termination_options.html)
  otutab:
    maxaccepts: 64
    maxrejects: 64
    ident_threshold: 97  # percent
    # The program to use (optional; default: vsearch)
    program: vsearch  # { vsearch, usearch }


# DADA2 specific settings (still incomplete)
# for QIIME2 DADA2 plugin docs, see 
# https://docs.qiime2.org/2023.7/plugins/available/cutadapt/trim-paired
# The Amptk 'dada2' workflow makes only use of the 'chimera_method' setting
dada2:
  # quality score at which sequences are truncated (--p-trunc-q)
  # (if the result is shorter than trunclen_fwd/trunclen_rev, the read is discarded)
  trunc_qual: 2.
  # Truncate reads to given number of bases. Shorter reads are discarded
  # (truncLen option, QIIME2: --p-trunc-len-f / --p-trunc-len-r)
  trunc_len:
    fwd: 0
    rev: 0
  # Maximum number of expected errors in forward/reverse reads for them
  # to be retained in the analysis
  # (maxEE option, unlimited by default; QIIME2: --p-max-ee-f / --p-max-ee-r, 2.0 by default)
  max_err:
    fwd: 2
    rev: 5
  # QIIME2: --p-pooling-method
  pooling_method: independent  # { independent, pseudo, pooled }
  # QIIME2: --p-chimera-method
  chimera_method: consensus  # { consensus, per-sample, pooled }
  # QIIME2: --p-allow-one-off (values > 1 are set to 1)
  merge_maxdiffs: 1


# ITS recognition (fungi)
# for options see https://microbiology.se/publ/itsx_users_guide.pdf
ITSx:
  # Taxonomic groups to include or "all" (which is the slowest
  # setting, but probably best as well unless you are sure that
  # there are only sequences from certain groups.
  organism_groups: all  # -t setting
  # Domain E-value cutoff in HMMER search for sequence to be included
  # in the output (ITSx default: 1.0e-5)
  # note: 1e-5 does not work, only 1.e-5 or 1.0e-5 (otherwise validator will fail)
  e-value: 1.0e-5
  #
  # All the following settings are *optional*, we just show the defaults
  # here (sometimes different from ITSx defaults)
  allow_single_domain: 1e-9,0
  complement: F  # ITSx uses T (true) as default, but we know the orientation of our amplicon
  heuristics: F
  # common output options
  graphical: F  # ITSx has T as default
  fasta: T
  preserve: F
  save_regions: all  # ITSx has only ITS1,ITS2 as default
  partial: 50  # ITSx has 0 as default
